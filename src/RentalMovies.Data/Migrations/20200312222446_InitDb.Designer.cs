// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentalMovies.Data;

namespace RentalMovies.Data.Migrations
{
    [DbContext(typeof(RentalMoviesDbContext))]
    [Migration("20200312222446_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RentalMovies.Domain.Entities.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(2000)");

                    b.Property<decimal>("RentalPrice")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("RentalMovies.Domain.Entities.MovieLike", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("MovieId", "UserId");

                    b.ToTable("MovieLikes");
                });

            modelBuilder.Entity("RentalMovies.Domain.Entities.RentalMovie", b =>
                {
                    b.Property<int>("RentalMovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPenaltySolved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<decimal>("PenaltyMoney")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<DateTime>("RentalDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime");

                    b.Property<int>("StatusMovie")
                        .HasColumnType("int");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RentalMovieId");

                    b.HasIndex("StockId");

                    b.ToTable("RentalMovies");
                });

            modelBuilder.Entity("RentalMovies.Domain.Entities.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<Guid>("UniqueKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StockId");

                    b.HasIndex("MovieId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("RentalMovies.Domain.Entities.MovieLike", b =>
                {
                    b.HasOne("RentalMovies.Domain.Entities.Movie", "Movie")
                        .WithMany("MovieLikes")
                        .HasForeignKey("MovieId")
                        .HasConstraintName("FK_Movie_MovieLikes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentalMovies.Domain.Entities.RentalMovie", b =>
                {
                    b.HasOne("RentalMovies.Domain.Entities.Stock", "Stock")
                        .WithMany("RentalMovies")
                        .HasForeignKey("StockId")
                        .HasConstraintName("FK_Stock_RentalMovies")
                        .IsRequired();
                });

            modelBuilder.Entity("RentalMovies.Domain.Entities.Stock", b =>
                {
                    b.HasOne("RentalMovies.Domain.Entities.Movie", "Movie")
                        .WithMany("Stocks")
                        .HasForeignKey("MovieId")
                        .HasConstraintName("FK_Movie_Stocks")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
